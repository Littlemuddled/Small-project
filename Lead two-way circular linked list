//List.h
#pragma once

#include<stdio.h>
#include<stdlib.h>
#include<assert.h>

//带头+双向+循环链表增删查改实现

typedef int LTDataType;
typedef struct ListNode
{
	LTDataType data;
	struct ListNode* next;
	struct ListNode* prev;
}ListNode;


ListNode* BuyListNode(LTDataType x);//创建返回链表的头结点.
ListNode* ListInit();//初始化
void ListDestory(ListNode* phead);//销毁
void ListPrint(ListNode* phead);//打印

void ListPushBack(ListNode* phead, LTDataType x);//尾插
void ListPushFront(ListNode* phead, LTDataType x);//头插

void ListPopFront(ListNode* phead);//头删
void ListPopBack(ListNode* phead);//尾删

ListNode* ListFind(ListNode* phead, LTDataType x);//查找
void ListInsert(ListNode* pos, LTDataType x);//在pos的前面进行插入
void ListErase(ListNode* pos);//删除pos位置的节点
